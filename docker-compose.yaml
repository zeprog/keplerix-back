version: '3.9'

services:
  main-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: keplerix
    ports:
      - "8000:8000"
    command: >
      /bin/sh -c "alembic upgrade head && uvicorn --factory api.main:create_app --reload --host 0.0.0.0 --port 8000"
    env_file:
      - ./.env
    volumes:
      - ./app/:/app/
      - ./alembic.ini:/app/alembic.ini
    depends_on:
      - db
      - redis
    networks:
      - backend

  # test-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: keplerix-test
  #   command: >
  #     /bin/sh -c "pytest tests --disable-warnings"
  #   env_file:
  #     - ./.env.test
  #   environment:
  #     - PYTHONPATH=/app
  #     - DATABASE_URL=postgresql+asyncpg://postgres:postgres@test_db:5432/keplerix_test
  #   volumes:
  #     - ./app/:/app/
  #     - ./tests/:/app/tests/
  #     - ./alembic.ini:/app/alembic.ini
  #   depends_on:
  #     - test_db
  #     - redis
  #   networks:
  #     - backend
  
  db:
    image: postgres:13
    container_name: keplerix-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: keplerix_test
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  # test_db:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: keplerix_test
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - postgres_test_data:/var/lib/postgresql/data
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - backend
    restart: unless-stopped

  redis:
    image: "redis:alpine"
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  postgres:
  # postgres_test_data:
  pgadmin:
  redis_data: